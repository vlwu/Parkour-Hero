{
  "version": 3,
  "sources": ["../../../../../../../node_modules/preact/src/constants.js", "../../../../../../../node_modules/preact/src/util.js", "../../../../../../../node_modules/preact/src/options.js", "../../../../../../../node_modules/preact/src/create-element.js", "../../../../../../../node_modules/preact/src/component.js", "../../../../../../../node_modules/preact/src/diff/props.js", "../../../../../../../node_modules/preact/src/create-context.js", "../../../../../../../node_modules/preact/src/diff/children.js", "../../../../../../../node_modules/preact/src/diff/index.js", "../../../../../../../node_modules/preact/src/render.js", "../../../../../../../node_modules/preact/src/clone-element.js", "../../../../../../../node_modules/preact/src/diff/catch-error.js"],
  "sourcesContent": ["/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 2;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 1;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nexport const XHTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n\nexport const NULL = null;\nexport const UNDEFINED = undefined;\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { EMPTY_ARR } from './constants';\n\nexport const isArray = Array.isArray;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-expect-error We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {import('./index').ContainerNode} node The node to remove\n */\nexport function removeNode(node) {\n\tif (node && node.parentNode) node.parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n", "import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n", "import { slice } from './util';\nimport options from './options';\nimport { NULL, UNDEFINED } from './constants';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component constructor for this\n * virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the\n * virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != NULL) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === UNDEFINED) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, NULL);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\t/** @type {import('./internal').VNode} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: NULL,\n\t\t_parent: NULL,\n\t\t_depth: 0,\n\t\t_dom: NULL,\n\t\t_component: NULL,\n\t\tconstructor: UNDEFINED,\n\t\t_original: original == NULL ? ++vnodeId : original,\n\t\t_index: -1,\n\t\t_flags: 0\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == NULL && options.vnode != NULL) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: NULL };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != NULL && vnode.constructor == UNDEFINED;\n", "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\nimport { MODE_HYDRATE, NULL } from './constants';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function BaseComponent(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nBaseComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != NULL && this._nextState != this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == NULL) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nBaseComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](https://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {ComponentChildren | void}\n */\nBaseComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == NULL) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._index + 1)\n\t\t\t: NULL;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != NULL && sibling._dom != NULL) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : NULL;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet oldVNode = component._vnode,\n\t\toldDom = oldVNode._dom,\n\t\tcommitQueue = [],\n\t\trefQueue = [];\n\n\tif (component._parentDom) {\n\t\tconst newVNode = assign({}, oldVNode);\n\t\tnewVNode._original = oldVNode._original + 1;\n\t\tif (options.vnode) options.vnode(newVNode);\n\n\t\tdiff(\n\t\t\tcomponent._parentDom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tcomponent._parentDom.namespaceURI,\n\t\t\toldVNode._flags & MODE_HYDRATE ? [oldDom] : NULL,\n\t\t\tcommitQueue,\n\t\t\toldDom == NULL ? getDomSibling(oldVNode) : oldDom,\n\t\t\t!!(oldVNode._flags & MODE_HYDRATE),\n\t\t\trefQueue\n\t\t);\n\n\t\tnewVNode._original = oldVNode._original;\n\t\tnewVNode._parent._children[newVNode._index] = newVNode;\n\t\tcommitRoot(commitQueue, newVNode, refQueue);\n\n\t\tif (newVNode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(newVNode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != NULL && vnode._component != NULL) {\n\t\tvnode._dom = vnode._component.base = NULL;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != NULL && child._dom != NULL) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce != options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c,\n\t\tl = 1;\n\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile (rerenderQueue.length) {\n\t\t// Keep the rerender queue sorted by (depth, insertion order). The queue\n\t\t// will initially be sorted on the first iteration only if it has more than 1 item.\n\t\t//\n\t\t// New items can be added to the queue e.g. when rerendering a provider, so we want to\n\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t// single pass\n\t\tif (rerenderQueue.length > l) {\n\t\t\trerenderQueue.sort(depthSort);\n\t\t}\n\n\t\tc = rerenderQueue.shift();\n\t\tl = rerenderQueue.length;\n\n\t\tif (c._dirty) {\n\t\t\trenderComponent(c);\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n", "import { IS_NON_DIMENSIONAL, NULL, SVG_NAMESPACE } from '../constants';\nimport options from '../options';\n\nfunction setStyle(style, key, value) {\n\tif (key[0] == '-') {\n\t\tstyle.setProperty(key, value == NULL ? '' : value);\n\t} else if (value == NULL) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\nconst CAPTURE_REGEX = /(PointerCapture)$|Capture$/i;\n\n// A logical clock to solve issues like https://github.com/preactjs/preact/issues/3927.\n// When the DOM performs an event it leaves micro-ticks in between bubbling up which means that\n// an event can trigger on a newly reated DOM-node while the event bubbles up.\n//\n// Originally inspired by Vue\n// (https://github.com/vuejs/core/blob/caeb8a68811a1b0f79/packages/runtime-dom/src/modules/events.ts#L90-L101),\n// but modified to use a logical clock instead of Date.now() in case event handlers get attached\n// and events get dispatched during the same millisecond.\n//\n// The clock is incremented after each new event dispatch. This allows 1 000 000 new events\n// per second for over 280 years before the value reaches Number.MAX_SAFE_INTEGER (2**53 - 1).\nlet eventClock = 0;\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {string} namespace Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, namespace) {\n\tlet useCapture;\n\n\to: if (name == 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] != oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] == 'o' && name[1] == 'n') {\n\t\tuseCapture = name != (name = name.replace(CAPTURE_REGEX, '$1'));\n\t\tconst lowerCaseName = name.toLowerCase();\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (lowerCaseName in dom || name == 'onFocusOut' || name == 'onFocusIn')\n\t\t\tname = lowerCaseName.slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tvalue._attached = eventClock;\n\t\t\t\tdom.addEventListener(\n\t\t\t\t\tname,\n\t\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\t\tuseCapture\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tvalue._attached = oldValue._attached;\n\t\t\t}\n\t\t} else {\n\t\t\tdom.removeEventListener(\n\t\t\t\tname,\n\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\tuseCapture\n\t\t\t);\n\t\t}\n\t} else {\n\t\tif (namespace == SVG_NAMESPACE) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname != 'width' &&\n\t\t\tname != 'height' &&\n\t\t\tname != 'href' &&\n\t\t\tname != 'list' &&\n\t\t\tname != 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname != 'tabIndex' &&\n\t\t\tname != 'download' &&\n\t\t\tname != 'rowSpan' &&\n\t\t\tname != 'colSpan' &&\n\t\t\tname != 'role' &&\n\t\t\tname != 'popover' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == NULL ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value == 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != NULL && (value !== false || name[4] == '-')) {\n\t\t\tdom.setAttribute(name, name == 'popover' && value == true ? '' : value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Create an event proxy function.\n * @param {boolean} useCapture Is the event handler for the capture phase.\n * @private\n */\nfunction createEventProxy(useCapture) {\n\t/**\n\t * Proxy an event to hooked event handlers\n\t * @param {import('../internal').PreactEvent} e The event object from the browser\n\t * @private\n\t */\n\treturn function (e) {\n\t\tif (this._listeners) {\n\t\t\tconst eventHandler = this._listeners[e.type + useCapture];\n\t\t\tif (e._dispatched == NULL) {\n\t\t\t\te._dispatched = eventClock++;\n\n\t\t\t\t// When `e._dispatched` is smaller than the time when the targeted event\n\t\t\t\t// handler was attached we know we have bubbled up to an element that was added\n\t\t\t\t// during patching the DOM.\n\t\t\t} else if (e._dispatched < eventHandler._attached) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn eventHandler(options.event ? options.event(e) : e);\n\t\t}\n\t};\n}\n\nconst eventProxy = createEventProxy(false);\nconst eventProxyCapture = createEventProxy(true);\n", "import { enqueueRender } from './component';\nimport { NULL } from './constants';\n\nexport let i = 0;\n\nexport function createContext(defaultValue) {\n\tfunction Context(props) {\n\t\tif (!this.getChildContext) {\n\t\t\t/** @type {Set<import('./internal').Component> | null} */\n\t\t\tlet subs = new Set();\n\t\t\tlet ctx = {};\n\t\t\tctx[Context._id] = this;\n\n\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\tthis.componentWillUnmount = () => {\n\t\t\t\tsubs = NULL;\n\t\t\t};\n\n\t\t\tthis.shouldComponentUpdate = function (_props) {\n\t\t\t\t// @ts-expect-error even\n\t\t\t\tif (this.props.value != _props.value) {\n\t\t\t\t\tsubs.forEach(c => {\n\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.sub = c => {\n\t\t\t\tsubs.add(c);\n\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\tif (subs) {\n\t\t\t\t\t\tsubs.delete(c);\n\t\t\t\t\t}\n\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t};\n\t\t\t};\n\t\t}\n\n\t\treturn props.children;\n\t}\n\n\tContext._id = '__cC' + i++;\n\tContext._defaultValue = defaultValue;\n\n\t/** @type {import('./internal').FunctionComponent} */\n\tContext.Consumer = (props, contextValue) => {\n\t\treturn props.children(contextValue);\n\t};\n\n\t// we could also get rid of _contextRef entirely\n\tContext.Provider =\n\t\tContext._contextRef =\n\t\tContext.Consumer.contextType =\n\t\t\tContext;\n\n\treturn Context;\n}\n", "import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport {\n\tEMPTY_OBJ,\n\tEMPTY_ARR,\n\tINSERT_VNODE,\n\tMATCHED,\n\tUNDEFINED,\n\tNULL\n} from '../constants';\nimport { isArray } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * @typedef {import('../internal').ComponentChildren} ComponentChildren\n * @typedef {import('../internal').Component} Component\n * @typedef {import('../internal').PreactElement} PreactElement\n * @typedef {import('../internal').VNode} VNode\n */\n\n/**\n * Diff the children of a virtual node\n * @param {PreactElement} parentDom The DOM element whose children are being\n * diffed\n * @param {ComponentChildren[]} renderResult\n * @param {VNode} newParentVNode The new virtual node whose children should be\n * diff'ed against oldParentVNode\n * @param {VNode} oldParentVNode The old virtual node whose children should be\n * diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\tlet i,\n\t\t/** @type {VNode} */\n\t\toldVNode,\n\t\t/** @type {VNode} */\n\t\tchildVNode,\n\t\t/** @type {PreactElement} */\n\t\tnewDom,\n\t\t/** @type {PreactElement} */\n\t\tfirstChildDom;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\t/** @type {VNode[]} */\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet newChildrenLength = renderResult.length;\n\n\toldDom = constructNewChildrenArray(\n\t\tnewParentVNode,\n\t\trenderResult,\n\t\toldChildren,\n\t\toldDom,\n\t\tnewChildrenLength\n\t);\n\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\tchildVNode = newParentVNode._children[i];\n\t\tif (childVNode == NULL) continue;\n\n\t\t// At this point, constructNewChildrenArray has assigned _index to be the\n\t\t// matchingIndex for this VNode's oldVNode (or -1 if there is no oldVNode).\n\t\tif (childVNode._index == -1) {\n\t\t\toldVNode = EMPTY_OBJ;\n\t\t} else {\n\t\t\toldVNode = oldChildren[childVNode._index] || EMPTY_OBJ;\n\t\t}\n\n\t\t// Update childVNode._index to its final index\n\t\tchildVNode._index = i;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tlet result = diff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\n\t\t// Adjust DOM nodes\n\t\tnewDom = childVNode._dom;\n\t\tif (childVNode.ref && oldVNode.ref != childVNode.ref) {\n\t\t\tif (oldVNode.ref) {\n\t\t\t\tapplyRef(oldVNode.ref, NULL, childVNode);\n\t\t\t}\n\t\t\trefQueue.push(\n\t\t\t\tchildVNode.ref,\n\t\t\t\tchildVNode._component || newDom,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t}\n\n\t\tif (firstChildDom == NULL && newDom != NULL) {\n\t\t\tfirstChildDom = newDom;\n\t\t}\n\n\t\tif (\n\t\t\tchildVNode._flags & INSERT_VNODE ||\n\t\t\toldVNode._children === childVNode._children\n\t\t) {\n\t\t\toldDom = insert(childVNode, oldDom, parentDom);\n\t\t} else if (typeof childVNode.type == 'function' && result !== UNDEFINED) {\n\t\t\toldDom = result;\n\t\t} else if (newDom) {\n\t\t\toldDom = newDom.nextSibling;\n\t\t}\n\n\t\t// Unset diffing flags\n\t\tchildVNode._flags &= ~(INSERT_VNODE | MATCHED);\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\treturn oldDom;\n}\n\n/**\n * @param {VNode} newParentVNode\n * @param {ComponentChildren[]} renderResult\n * @param {VNode[]} oldChildren\n */\nfunction constructNewChildrenArray(\n\tnewParentVNode,\n\trenderResult,\n\toldChildren,\n\toldDom,\n\tnewChildrenLength\n) {\n\t/** @type {number} */\n\tlet i;\n\t/** @type {VNode} */\n\tlet childVNode;\n\t/** @type {VNode} */\n\tlet oldVNode;\n\n\tlet oldChildrenLength = oldChildren.length,\n\t\tremainingOldChildren = oldChildrenLength;\n\n\tlet skew = 0;\n\n\tnewParentVNode._children = new Array(newChildrenLength);\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\t// @ts-expect-error We are reusing the childVNode variable to hold both the\n\t\t// pre and post normalized childVNode\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == NULL ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tnewParentVNode._children[i] = NULL;\n\t\t\tcontinue;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint' ||\n\t\t\tchildVNode.constructor == String\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tNULL,\n\t\t\t\tchildVNode,\n\t\t\t\tNULL,\n\t\t\t\tNULL,\n\t\t\t\tNULL\n\t\t\t);\n\t\t} else if (isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tNULL,\n\t\t\t\tNULL,\n\t\t\t\tNULL\n\t\t\t);\n\t\t} else if (childVNode.constructor == UNDEFINED && childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : NULL,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\tconst skewedIndex = i + skew;\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Temporarily store the matchingIndex on the _index property so we can pull\n\t\t// out the oldVNode in diffChildren. We'll override this to the VNode's\n\t\t// final index after using this property to get the oldVNode\n\t\tconst matchingIndex = (childVNode._index = findMatchingIndex(\n\t\t\tchildVNode,\n\t\t\toldChildren,\n\t\t\tskewedIndex,\n\t\t\tremainingOldChildren\n\t\t));\n\n\t\toldVNode = NULL;\n\t\tif (matchingIndex != -1) {\n\t\t\toldVNode = oldChildren[matchingIndex];\n\t\t\tremainingOldChildren--;\n\t\t\tif (oldVNode) {\n\t\t\t\toldVNode._flags |= MATCHED;\n\t\t\t}\n\t\t}\n\n\t\t// Here, we define isMounting for the purposes of the skew diffing\n\t\t// algorithm. Nodes that are unsuspending are considered mounting and we detect\n\t\t// this by checking if oldVNode._original == null\n\t\tconst isMounting = oldVNode == NULL || oldVNode._original == NULL;\n\n\t\tif (isMounting) {\n\t\t\tif (matchingIndex == -1) {\n\t\t\t\t// When the array of children is growing we need to decrease the skew\n\t\t\t\t// as we are adding a new element to the array.\n\t\t\t\t// Example:\n\t\t\t\t// [1, 2, 3] --> [0, 1, 2, 3]\n\t\t\t\t// oldChildren   newChildren\n\t\t\t\t//\n\t\t\t\t// The new element is at index 0, so our skew is 0,\n\t\t\t\t// we need to decrease the skew as we are adding a new element.\n\t\t\t\t// The decrease will cause us to compare the element at position 1\n\t\t\t\t// with value 1 with the element at position 0 with value 0.\n\t\t\t\t//\n\t\t\t\t// A linear concept is applied when the array is shrinking,\n\t\t\t\t// if the length is unchanged we can assume that no skew\n\t\t\t\t// changes are needed.\n\t\t\t\tif (newChildrenLength > oldChildrenLength) {\n\t\t\t\t\tskew--;\n\t\t\t\t} else if (newChildrenLength < oldChildrenLength) {\n\t\t\t\t\tskew++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we are mounting a DOM VNode, mark it for insertion\n\t\t\tif (typeof childVNode.type != 'function') {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t} else if (matchingIndex != skewedIndex) {\n\t\t\t// When we move elements around i.e. [0, 1, 2] --> [1, 0, 2]\n\t\t\t// --> we diff 1, we find it at position 1 while our skewed index is 0 and our skew is 0\n\t\t\t//     we set the skew to 1 as we found an offset.\n\t\t\t// --> we diff 0, we find it at position 0 while our skewed index is at 2 and our skew is 1\n\t\t\t//     this makes us increase the skew again.\n\t\t\t// --> we diff 2, we find it at position 2 while our skewed index is at 4 and our skew is 2\n\t\t\t//\n\t\t\t// this becomes an optimization question where currently we see a 1 element offset as an insertion\n\t\t\t// or deletion i.e. we optimize for [0, 1, 2] --> [9, 0, 1, 2]\n\t\t\t// while a more than 1 offset we see as a swap.\n\t\t\t// We could probably build heuristics for having an optimized course of action here as well, but\n\t\t\t// might go at the cost of some bytes.\n\t\t\t//\n\t\t\t// If we wanted to optimize for i.e. only swaps we'd just do the last two code-branches and have\n\t\t\t// only the first item be a re-scouting and all the others fall in their skewed counter-part.\n\t\t\t// We could also further optimize for swaps\n\t\t\tif (matchingIndex == skewedIndex - 1) {\n\t\t\t\tskew--;\n\t\t\t} else if (matchingIndex == skewedIndex + 1) {\n\t\t\t\tskew++;\n\t\t\t} else {\n\t\t\t\tif (matchingIndex > skewedIndex) {\n\t\t\t\t\tskew--;\n\t\t\t\t} else {\n\t\t\t\t\tskew++;\n\t\t\t\t}\n\n\t\t\t\t// Move this VNode's DOM if the original index (matchingIndex) doesn't\n\t\t\t\t// match the new skew index (i + new skew)\n\t\t\t\t// In the former two branches we know that it matches after skewing\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any. Loop forwards so that as we\n\t// unmount DOM from the beginning of the oldChildren, we can adjust oldDom to\n\t// point to the next child, which needs to be the first DOM node that won't be\n\t// unmounted.\n\tif (remainingOldChildren) {\n\t\tfor (i = 0; i < oldChildrenLength; i++) {\n\t\t\toldVNode = oldChildren[i];\n\t\t\tif (oldVNode != NULL && (oldVNode._flags & MATCHED) == 0) {\n\t\t\t\tif (oldVNode._dom == oldDom) {\n\t\t\t\t\toldDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {VNode} parentVNode\n * @param {PreactElement} oldDom\n * @param {PreactElement} parentDom\n * @returns {PreactElement}\n */\nfunction insert(parentVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\n\tif (typeof parentVNode.type == 'function') {\n\t\tlet children = parentVNode._children;\n\t\tfor (let i = 0; children && i < children.length; i++) {\n\t\t\tif (children[i]) {\n\t\t\t\t// If we enter this code path on sCU bailout, where we copy\n\t\t\t\t// oldVNode._children to newVNode._children, we need to update the old\n\t\t\t\t// children's _parent pointer to point to the newVNode (parentVNode\n\t\t\t\t// here).\n\t\t\t\tchildren[i]._parent = parentVNode;\n\t\t\t\toldDom = insert(children[i], oldDom, parentDom);\n\t\t\t}\n\t\t}\n\n\t\treturn oldDom;\n\t} else if (parentVNode._dom != oldDom) {\n\t\tif (oldDom && parentVNode.type && !parentDom.contains(oldDom)) {\n\t\t\toldDom = getDomSibling(parentVNode);\n\t\t}\n\t\tparentDom.insertBefore(parentVNode._dom, oldDom || NULL);\n\t\toldDom = parentVNode._dom;\n\t}\n\n\tdo {\n\t\toldDom = oldDom && oldDom.nextSibling;\n\t} while (oldDom != NULL && oldDom.nodeType == 8);\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {ComponentChildren} children The unflattened children of a virtual\n * node\n * @returns {VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == NULL || typeof children == 'boolean') {\n\t} else if (isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\n/**\n * @param {VNode} childVNode\n * @param {VNode[]} oldChildren\n * @param {number} skewedIndex\n * @param {number} remainingOldChildren\n * @returns {number}\n */\nfunction findMatchingIndex(\n\tchildVNode,\n\toldChildren,\n\tskewedIndex,\n\tremainingOldChildren\n) {\n\tconst key = childVNode.key;\n\tconst type = childVNode.type;\n\tlet oldVNode = oldChildren[skewedIndex];\n\n\t// We only need to perform a search if there are more children\n\t// (remainingOldChildren) to search. However, if the oldVNode we just looked\n\t// at skewedIndex was not already used in this diff, then there must be at\n\t// least 1 other (so greater than 1) remainingOldChildren to attempt to match\n\t// against. So the following condition checks that ensuring\n\t// remainingOldChildren > 1 if the oldVNode is not already used/matched. Else\n\t// if the oldVNode was null or matched, then there could needs to be at least\n\t// 1 (aka `remainingOldChildren > 0`) children to find and compare against.\n\t//\n\t// If there is an unkeyed functional VNode, that isn't a built-in like our Fragment,\n\t// we should not search as we risk re-using state of an unrelated VNode. (reverted for now)\n\tlet shouldSearch =\n\t\t// (typeof type != 'function' || type === Fragment || key) &&\n\t\tremainingOldChildren >\n\t\t(oldVNode != NULL && (oldVNode._flags & MATCHED) == 0 ? 1 : 0);\n\n\tif (\n\t\t(oldVNode === NULL && childVNode.key == null) ||\n\t\t(oldVNode &&\n\t\t\tkey == oldVNode.key &&\n\t\t\ttype == oldVNode.type &&\n\t\t\t(oldVNode._flags & MATCHED) == 0)\n\t) {\n\t\treturn skewedIndex;\n\t} else if (shouldSearch) {\n\t\tlet x = skewedIndex - 1;\n\t\tlet y = skewedIndex + 1;\n\t\twhile (x >= 0 || y < oldChildren.length) {\n\t\t\tif (x >= 0) {\n\t\t\t\toldVNode = oldChildren[x];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) == 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype == oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t\tx--;\n\t\t\t}\n\n\t\t\tif (y < oldChildren.length) {\n\t\t\t\toldVNode = oldChildren[y];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) == 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype == oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn y;\n\t\t\t\t}\n\t\t\t\ty++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn -1;\n}\n", "import {\n\tEMPTY_OBJ,\n\tMATH_NAMESPACE,\n\tMODE_HYDRATE,\n\tMODE_SUSPENDED,\n\tNULL,\n\tRESET_MODE,\n\tSVG_NAMESPACE,\n\tUNDEFINED,\n\tXHTML_NAMESPACE\n} from '../constants';\nimport { BaseComponent, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { setProperty } from './props';\nimport { assign, isArray, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * @typedef {import('../internal').ComponentChildren} ComponentChildren\n * @typedef {import('../internal').Component} Component\n * @typedef {import('../internal').PreactElement} PreactElement\n * @typedef {import('../internal').VNode} VNode\n */\n\n/**\n * @template {any} T\n * @typedef {import('../internal').Ref<T>} Ref<T>\n */\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {PreactElement} parentDom The parent of the DOM element\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\t/** @type {any} */\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor != UNDEFINED) return NULL;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._flags & MODE_SUSPENDED) {\n\t\tisHydrating = !!(oldVNode._flags & MODE_HYDRATE);\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\touter: if (typeof newType == 'function') {\n\t\ttry {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\t\t\tconst isClassComponent =\n\t\t\t\t'prototype' in newType && newType.prototype.render;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif (isClassComponent) {\n\t\t\t\t\t// @ts-expect-error The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-expect-error Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new BaseComponent(\n\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (isClassComponent && c._nextState == NULL) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (isClassComponent && newType.getDerivedStateFromProps != NULL) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == NULL &&\n\t\t\t\t\tc.componentWillMount != NULL\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidMount != NULL) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == NULL &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != NULL\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != NULL &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original == oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original != oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.some(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != NULL) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidUpdate != NULL) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\t\t\tc._force = false;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif (isClassComponent) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != NULL) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (isClassComponent && !isNew && c.getSnapshotBeforeUpdate != NULL) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != NULL && tmp.type === Fragment && tmp.key == NULL;\n\t\t\tlet renderResult = tmp;\n\n\t\t\tif (isTopLevelFragment) {\n\t\t\t\trenderResult = cloneNode(tmp.props.children);\n\t\t\t}\n\n\t\t\toldDom = diffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnamespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._flags &= RESET_MODE;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = NULL;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tnewVNode._original = NULL;\n\t\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\t\tif (isHydrating || excessDomChildren != NULL) {\n\t\t\t\tif (e.then) {\n\t\t\t\t\tnewVNode._flags |= isHydrating\n\t\t\t\t\t\t? MODE_HYDRATE | MODE_SUSPENDED\n\t\t\t\t\t\t: MODE_SUSPENDED;\n\n\t\t\t\t\twhile (oldDom && oldDom.nodeType == 8 && oldDom.nextSibling) {\n\t\t\t\t\t\toldDom = oldDom.nextSibling;\n\t\t\t\t\t}\n\n\t\t\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = NULL;\n\t\t\t\t\tnewVNode._dom = oldDom;\n\t\t\t\t} else {\n\t\t\t\t\tfor (let i = excessDomChildren.length; i--; ) {\n\t\t\t\t\t\tremoveNode(excessDomChildren[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t}\n\t\t\toptions._catchError(e, newVNode, oldVNode);\n\t\t}\n\t} else if (\n\t\texcessDomChildren == NULL &&\n\t\tnewVNode._original == oldVNode._original\n\t) {\n\t\tnewVNode._children = oldVNode._children;\n\t\tnewVNode._dom = oldVNode._dom;\n\t} else {\n\t\toldDom = newVNode._dom = diffElementNodes(\n\t\t\toldVNode._dom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\t}\n\n\tif ((tmp = options.diffed)) tmp(newVNode);\n\n\treturn newVNode._flags & MODE_SUSPENDED ? undefined : oldDom;\n}\n\n/**\n * @param {Array<Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {VNode} root\n */\nexport function commitRoot(commitQueue, root, refQueue) {\n\tfor (let i = 0; i < refQueue.length; i++) {\n\t\tapplyRef(refQueue[i], refQueue[++i], refQueue[++i]);\n\t}\n\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-expect-error Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-expect-error See above comment on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\nfunction cloneNode(node) {\n\tif (\n\t\ttypeof node != 'object' ||\n\t\tnode == NULL ||\n\t\t(node._depth && node._depth > 0)\n\t) {\n\t\treturn node;\n\t}\n\n\tif (isArray(node)) {\n\t\treturn node.map(cloneNode);\n\t}\n\n\treturn assign({}, node);\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {PreactElement} dom The DOM element representing the virtual nodes\n * being diffed\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n * @returns {PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating,\n\trefQueue\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = /** @type {string} */ (newVNode.type);\n\t/** @type {any} */\n\tlet i;\n\t/** @type {{ __html?: string }} */\n\tlet newHtml;\n\t/** @type {{ __html?: string }} */\n\tlet oldHtml;\n\t/** @type {ComponentChildren} */\n\tlet newChildren;\n\tlet value;\n\tlet inputValue;\n\tlet checked;\n\n\t// Tracks entering and exiting namespaces when descending through the tree.\n\tif (nodeType == 'svg') namespace = SVG_NAMESPACE;\n\telse if (nodeType == 'math') namespace = MATH_NAMESPACE;\n\telse if (!namespace) namespace = XHTML_NAMESPACE;\n\n\tif (excessDomChildren != NULL) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tvalue = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tvalue &&\n\t\t\t\t'setAttribute' in value == !!nodeType &&\n\t\t\t\t(nodeType ? value.localName == nodeType : value.nodeType == 3)\n\t\t\t) {\n\t\t\t\tdom = value;\n\t\t\t\texcessDomChildren[i] = NULL;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == NULL) {\n\t\tif (nodeType == NULL) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tdom = document.createElementNS(\n\t\t\tnamespace,\n\t\t\tnodeType,\n\t\t\tnewProps.is && newProps\n\t\t);\n\n\t\t// we are creating a new node, so we can assume this is a new subtree (in\n\t\t// case we are hydrating), this deopts the hydrate\n\t\tif (isHydrating) {\n\t\t\tif (options._hydrationMismatch)\n\t\t\t\toptions._hydrationMismatch(newVNode, excessDomChildren);\n\t\t\tisHydrating = false;\n\t\t}\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = NULL;\n\t}\n\n\tif (nodeType == NULL) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data != newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\t// If we are in a situation where we are not hydrating but are using\n\t\t// existing DOM (e.g. replaceNode) we should read the existing DOM\n\t\t// attributes to diff them\n\t\tif (!isHydrating && excessDomChildren != NULL) {\n\t\t\toldProps = {};\n\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\tvalue = dom.attributes[i];\n\t\t\t\toldProps[value.name] = value.value;\n\t\t\t}\n\t\t}\n\n\t\tfor (i in oldProps) {\n\t\t\tvalue = oldProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\toldHtml = value;\n\t\t\t} else if (!(i in newProps)) {\n\t\t\t\tif (\n\t\t\t\t\t(i == 'value' && 'defaultValue' in newProps) ||\n\t\t\t\t\t(i == 'checked' && 'defaultChecked' in newProps)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tsetProperty(dom, i, NULL, value, namespace);\n\t\t\t}\n\t\t}\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tfor (i in newProps) {\n\t\t\tvalue = newProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t\tnewChildren = value;\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\tnewHtml = value;\n\t\t\t} else if (i == 'value') {\n\t\t\t\tinputValue = value;\n\t\t\t} else if (i == 'checked') {\n\t\t\t\tchecked = value;\n\t\t\t} else if (\n\t\t\t\t(!isHydrating || typeof value == 'function') &&\n\t\t\t\toldProps[i] !== value\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, value, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\tif (\n\t\t\t\t!isHydrating &&\n\t\t\t\t(!oldHtml ||\n\t\t\t\t\t(newHtml.__html != oldHtml.__html && newHtml.__html != dom.innerHTML))\n\t\t\t) {\n\t\t\t\tdom.innerHTML = newHtml.__html;\n\t\t\t}\n\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\tif (oldHtml) dom.innerHTML = '';\n\n\t\t\tdiffChildren(\n\t\t\t\t// @ts-expect-error\n\t\t\t\tnewVNode.type == 'template' ? dom.content : dom,\n\t\t\t\tisArray(newChildren) ? newChildren : [newChildren],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnodeType == 'foreignObject' ? XHTML_NAMESPACE : namespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != NULL) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tremoveNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// As above, don't diff props during hydration\n\t\tif (!isHydrating) {\n\t\t\ti = 'value';\n\t\t\tif (nodeType == 'progress' && inputValue == NULL) {\n\t\t\t\tdom.removeAttribute('value');\n\t\t\t} else if (\n\t\t\t\tinputValue != UNDEFINED &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(inputValue !== dom[i] ||\n\t\t\t\t\t(nodeType == 'progress' && !inputValue) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType == 'option' && inputValue != oldProps[i]))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, inputValue, oldProps[i], namespace);\n\t\t\t}\n\n\t\t\ti = 'checked';\n\t\t\tif (checked != UNDEFINED && checked != dom[i]) {\n\t\t\t\tsetProperty(dom, i, checked, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {Ref<any> & { _unmount?: unknown }} ref\n * @param {any} value\n * @param {VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') {\n\t\t\tlet hasRefUnmount = typeof ref._unmount == 'function';\n\t\t\tif (hasRefUnmount) {\n\t\t\t\t// @ts-ignore TS doesn't like moving narrowing checks into variables\n\t\t\t\tref._unmount();\n\t\t\t}\n\n\t\t\tif (!hasRefUnmount || value != NULL) {\n\t\t\t\t// Store the cleanup function on the function\n\t\t\t\t// instance object itself to avoid shape\n\t\t\t\t// transitioning vnode\n\t\t\t\tref._unmount = ref(value);\n\t\t\t}\n\t\t} else ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {VNode} vnode The virtual node to unmount\n * @param {VNode} parentVNode The parent of the VNode that initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current == vnode._dom) {\n\t\t\tapplyRef(r, NULL, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != NULL) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = NULL;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type != 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\tvnode._component = vnode._parent = vnode._dom = UNDEFINED;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n", "import { EMPTY_OBJ, NULL } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\t// https://github.com/preactjs/preact/issues/3794\n\tif (parentDom == document) {\n\t\tparentDom = document.documentElement;\n\t}\n\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode == 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? NULL\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating && replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, NULL, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [],\n\t\trefQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.namespaceURI,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t\t? NULL\n\t\t\t\t: parentDom.firstChild\n\t\t\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t\t\t: NULL,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t\t? oldVNode._dom\n\t\t\t\t: parentDom.firstChild,\n\t\tisHydrating,\n\t\trefQueue\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode, refQueue);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n", "import { assign, slice } from './util';\nimport { createVNode } from './create-element';\nimport { NULL, UNDEFINED } from './constants';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used\n * as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\n\tlet defaultProps;\n\n\tif (vnode.type && vnode.type.defaultProps) {\n\t\tdefaultProps = vnode.type.defaultProps;\n\t}\n\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse if (props[i] === UNDEFINED && defaultProps != UNDEFINED) {\n\t\t\tnormalizedProps[i] = defaultProps[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tNULL\n\t);\n}\n", "import { NULL } from '../constants';\n\n/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw the error that was caught (except\n * for unmounting when this parameter is the highest parent that was being\n * unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component,\n\t\t/** @type {import('../internal').ComponentType} */\n\t\tctor,\n\t\t/** @type {boolean} */\n\t\thandled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != NULL) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != NULL) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n"],
  "mappings": "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",
  "names": ["slice", "options", "vnodeId", "isValidElement", "rerenderQueue", "prevDebounce", "defer", "depthSort", "CAPTURE_REGEX", "eventClock", "eventProxy", "eventProxyCapture", "i", "EMPTY_OBJ", "EMPTY_ARR", "IS_NON_DIMENSIONAL", "isArray", "Array", "assign", "obj", "props", "removeNode", "node", "parentNode", "removeChild", "createElement", "type", "children", "key", "ref", "normalizedProps", "arguments", "length", "call", "defaultProps", "createVNode", "original", "vnode", "__k", "__", "__b", "__e", "__c", "constructor", "__v", "__i", "__u", "createRef", "current", "Fragment", "BaseComponent", "context", "this", "getDomSibling", "childIndex", "sibling", "updateParentDomPointers", "child", "base", "enqueueRender", "c", "__d", "push", "process", "__r", "debounceRendering", "component", "newVNode", "oldVNode", "oldDom", "commitQueue", "refQueue", "l", "sort", "shift", "__P", "diff", "__n", "namespaceURI", "commitRoot", "diffChildren", "parentDom", "renderResult", "newParentVNode", "oldParentVNode", "globalContext", "namespace", "excessDomChildren", "isHydrating", "childVNode", "newDom", "firstChildDom", "result", "oldChildren", "newChildrenLength", "constructNewChildrenArray", "applyRef", "insert", "nextSibling", "skewedIndex", "matchingIndex", "oldChildrenLength", "remainingOldChildren", "skew", "String", "undefined", "findMatchingIndex", "unmount", "parentVNode", "contains", "insertBefore", "nodeType", "toChildArray", "out", "some", "x", "y", "setStyle", "style", "value", "setProperty", "test", "dom", "name", "oldValue", "useCapture", "lowerCaseName", "o", "cssText", "replace", "toLowerCase", "_attached", "addEventListener", "removeEventListener", "e", "removeAttribute", "setAttribute", "createEventProxy", "eventHandler", "_dispatched", "event", "tmp", "isNew", "oldProps", "oldState", "snapshot", "clearProcessingException", "newProps", "isClassComponent", "provider", "componentContext", "renderHook", "count", "newType", "outer", "prototype", "render", "contextType", "__E", "doRender", "sub", "state", "__h", "_sb", "__s", "getDerivedStateFromProps", "componentWillMount", "componentDidMount", "componentWillReceiveProps", "shouldComponentUpdate", "componentWillUpdate", "componentDidUpdate", "getChildContext", "getSnapshotBeforeUpdate", "cloneNode", "then", "MODE_HYDRATE", "indexOf", "diffElementNodes", "diffed", "root", "cb", "map", "newHtml", "oldHtml", "newChildren", "inputValue", "checked", "localName", "document", "createTextNode", "createElementNS", "is", "__m", "data", "childNodes", "attributes", "__html", "innerHTML", "content", "hasRefUnmount", "skipRemove", "r", "componentWillUnmount", "replaceNode", "documentElement", "firstChild", "hydrate", "cloneElement", "createContext", "defaultValue", "Context", "subs", "ctx", "Set", "_props", "forEach", "add", "old", "delete", "Provider", "__l", "Consumer", "contextValue", "error", "errorInfo", "ctor", "handled", "getDerivedStateFromError", "setState", "componentDidCatch", "update", "callback", "s", "forceUpdate", "Promise", "bind", "resolve", "setTimeout", "a", "b"]
}
